package tech.catenate.orchestra.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FotoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFotoAllPropertiesEquals(Foto expected, Foto actual) {
        assertFotoAutoGeneratedPropertiesEquals(expected, actual);
        assertFotoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFotoAllUpdatablePropertiesEquals(Foto expected, Foto actual) {
        assertFotoUpdatableFieldsEquals(expected, actual);
        assertFotoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFotoAutoGeneratedPropertiesEquals(Foto expected, Foto actual) {
        assertThat(expected)
            .as("Verify Foto auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFotoUpdatableFieldsEquals(Foto expected, Foto actual) {
        assertThat(expected)
            .as("Verify Foto relevant properties")
            .satisfies(e -> assertThat(e.getBlob()).as("check blob").isEqualTo(actual.getBlob()))
            .satisfies(e -> assertThat(e.getBlobContentType()).as("check blob contenty type").isEqualTo(actual.getBlobContentType()))
            .satisfies(e -> assertThat(e.getNome_file()).as("check nome_file").isEqualTo(actual.getNome_file()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFotoUpdatableRelationshipsEquals(Foto expected, Foto actual) {
        assertThat(expected)
            .as("Verify Foto relationships")
            .satisfies(e -> assertThat(e.getConcerto()).as("check concerto").isEqualTo(actual.getConcerto()));
    }
}
