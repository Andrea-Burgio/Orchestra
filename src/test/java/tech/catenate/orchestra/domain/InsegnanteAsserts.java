package tech.catenate.orchestra.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InsegnanteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsegnanteAllPropertiesEquals(Insegnante expected, Insegnante actual) {
        assertInsegnanteAutoGeneratedPropertiesEquals(expected, actual);
        assertInsegnanteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsegnanteAllUpdatablePropertiesEquals(Insegnante expected, Insegnante actual) {
        assertInsegnanteUpdatableFieldsEquals(expected, actual);
        assertInsegnanteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsegnanteAutoGeneratedPropertiesEquals(Insegnante expected, Insegnante actual) {
        assertThat(expected)
            .as("Verify Insegnante auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsegnanteUpdatableFieldsEquals(Insegnante expected, Insegnante actual) {
        assertThat(expected)
            .as("Verify Insegnante relevant properties")
            .satisfies(e -> assertThat(e.getNome()).as("check nome").isEqualTo(actual.getNome()))
            .satisfies(e -> assertThat(e.getCognome()).as("check cognome").isEqualTo(actual.getCognome()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsegnanteUpdatableRelationshipsEquals(Insegnante expected, Insegnante actual) {}
}
