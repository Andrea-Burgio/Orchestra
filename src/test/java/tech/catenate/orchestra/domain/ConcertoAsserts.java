package tech.catenate.orchestra.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ConcertoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConcertoAllPropertiesEquals(Concerto expected, Concerto actual) {
        assertConcertoAutoGeneratedPropertiesEquals(expected, actual);
        assertConcertoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConcertoAllUpdatablePropertiesEquals(Concerto expected, Concerto actual) {
        assertConcertoUpdatableFieldsEquals(expected, actual);
        assertConcertoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConcertoAutoGeneratedPropertiesEquals(Concerto expected, Concerto actual) {
        assertThat(expected)
            .as("Verify Concerto auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConcertoUpdatableFieldsEquals(Concerto expected, Concerto actual) {
        assertThat(expected)
            .as("Verify Concerto relevant properties")
            .satisfies(e -> assertThat(e.getData()).as("check data").isEqualTo(actual.getData()))
            .satisfies(e -> assertThat(e.getNome()).as("check nome").isEqualTo(actual.getNome()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConcertoUpdatableRelationshipsEquals(Concerto expected, Concerto actual) {
        assertThat(expected)
            .as("Verify Concerto relationships")
            .satisfies(e -> assertThat(e.getCorso()).as("check corso").isEqualTo(actual.getCorso()));
    }
}
